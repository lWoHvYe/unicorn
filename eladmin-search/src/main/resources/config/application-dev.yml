#配置数据源
spring:
  datasource:
    druid:
      #     使用只读数据源
      db-type: com.alibaba.druid.pool.DruidDataSource
      driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
      url: jdbc:log4jdbc:mysql://${DB_HOST:10.211.55.140}:${DB_PORT:3306}/${DB_NAME:eladmin}?serverTimezone=Asia/Shanghai&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
      #     从库改用只读账号
      username: ${DB_USER:reader}
      password: ${DB_PWD:123456}
      # 初始连接数
      initial-size: 5
      # 最小连接数
      min-idle: 15
      # 最大连接数
      max-active: 30
      # 获取连接超时时间
      max-wait: 5000
      # 连接有效性检测时间
      time-between-eviction-runs-millis: 60000
      # 连接在池中最小生存的时间
      min-evictable-idle-time-millis: 300000
      # 连接在池中最大生存的时间
      max-evictable-idle-time-millis: 900000
      # 是否自动回收超时连接
      #      remove-abandoned: true
      # 超时时间(以秒数为单位)
      #      remove-abandoned-timeout: 180
      # 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除
      test-while-idle: true
      # 指明是否在从池中取出连接前进行检验,如果检验失败, 则从池中去除连接并尝试取出另一个
      test-on-borrow: false
      # 是否在归还到池中前进行检验
      test-on-return: false
      # 检测连接是否有效
      validation-query: select 1
      # 配置监控统计
      webStatFilter:
        enabled: true
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        reset-enable: false
      filter:
        stat:
          enabled: true
          # 记录慢SQL
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true

  #  monogodb
  data:
    mongodb:
      host: 10.211.55.140
      port: 27017
      # username: test_user
      # password: pass@123
      database: eladmin
      #    elasticsearch:
      #      client:
      #        reactive:
      #          endpoints: 10.211.55.140:9200
      # 在es8，将移除tcp的方式：https://docs.spring.io/spring-data/elasticsearch/docs/4.3.0/reference/html/#reference
      #      cluster-name: elasticsearch
      # 还是连不上
  #      cluster-nodes: 10.211.55.140:9300
  elasticsearch:
    rest:
      uris: http://10.211.55.140:9200

  # redis配置
  redis:
    #详细版的redisson配置可参考：https://github.com/redisson/redisson/tree/master/redisson-spring-boot-starter
    enable: true
    redisson:
      file: classpath:redisson.yaml

  ##### RabbitMQ ####
  rabbitmq:
    addresses: 10.211.55.140:5672,10.211.55.140:5674
    #    host: 10.211.55.140 # rabbitmq的连接地址
    #    port: 5672 # rabbitmq的连接端口号
    virtual-host: /eladmin # rabbitmq的虚拟host
    username: admin # rabbitmq的用户名
    password: admin # rabbitmq的密码

  mail:
    host: xxx.com #SMTP server host
    username: xxx #login user
    password: xxx #login password
    properties:
      from: xxx@xxx.com #发件人（邮箱）
      to-dev: xxx@oo.com #信息默认接收人（邮箱）

    # 登录相关配置
    #login:
    # 登录缓存
    #  cache-enable: true
    #  是否限制单用户登录
    #  single-login: false
    #  验证码
    #  login-code:
    #  验证码类型配置 查看 LoginProperties 类
    #    code-type: gif
    #  登录图形验证码有效时间/分钟
    #    expiration: 2
    #  验证码高度
    #    width: 111
    #  验证码宽度
    #    height: 36
    # 内容长度
    #    length: 4
    # 字体名称，为空则使用默认字体
    #    font-name:
    # 字体大小
#    font-size: 25

#jwt
jwt:
  #  header: Authorization
  # 令牌前缀
  #  token-start-with: Bearer
  # 必须使用最少88位的Base64对该令牌进行编码
  base64-secret: ZmQ0ZGI5NjQ0MDQwY2I4MjMxY2Y3ZmI3MjdhN2ZmMjNhODViOTg1ZGE0NTBjMGM4NDA5NzYxMjdjOWMwYWRmZTBlZjlhNGY3ZTg4Y2U3YTE1ODVkZDU5Y2Y3OGYwZWE1NzUzNWQ2YjFjZDc0NGMxZWU2MmQ3MjY1NzJmNTE0MzI=
  # 令牌过期时间 此处单位/毫秒 ，默认4小时，可在此网站生成 https://www.convertworld.com/zh-hans/time/milliseconds.html
  #  token-validity-in-seconds: 14400000
  # 在线用户key
  #  online-key: online-token-
  # 验证码
  #  code-key: code-key-
  # token 续期检查时间范围（默认30分钟，单位毫秒），在token即将过期的一段时间内用户操作了，则给用户的token续期
  #  detect: 1800000
  # 续期时间范围，默认1小时，单位毫秒
#  renew: 3600000


# ===== SpringDoc配置 ===== #
springdoc:
  swagger-ui:
    # 自定义的文档界面访问路径。默认访问路径是/swagger-ui.html
    path: /swagger-ui.html

    # 字符串类型，一共三个值来控制操作和标记的默认展开设置。它可以是“list”（仅展开标记）、“full”（展开标记和操作）或“none”（不展开任何内容）。
    docExpansion: none

    # 布尔值。控制“试用”请求的请求持续时间（毫秒）的显示。
    displayRequestDuration: true

    # 布尔值。控制供应商扩展（x-）字段和操作、参数和架构值的显示。
    showExtensions: true

    # 布尔值。控制参数的扩展名（pattern、maxLength、minLength、maximum、minminimum）字段和值的显示。
    showCommonExtensions: true

    # 布尔值。禁用swagger用户界面默认petstore url。（从v1.4.1开始提供）。
    disable-swagger-default-url: true

  api-docs:
    # enabled the /v3/api-docs endpoint
    enabled: true

    # 自定义的文档api元数据访问路径。默认访问路径是/v3/api-docs
    path: /v3/api-docs

    # 布尔值。在@Schema（名称name、标题title和说明description，三个属性）上启用属性解析程序。
    resolve-schema-properties: true

  # 布尔值。实现OpenApi规范的打印。
  writer-with-default-pretty-printer: true
  #  https://springdoc.org/faq.html#how-can-i-map-pageable-spring-date-commons-object-to-correct-url-parameter-in-swagger-ui
  #  当前未生效
  model-converters:
    pageable-converter:
      enabled: true

# ===== 自定义swagger配置 ===== #
swagger:
  application-name: ${spring.application.name}
  application-version: 3.1.0
  application-description: 1101100_1010111_1101111_1001000_1110110_1011001_1100101
  try-host: http://localhost:${server.port}

#是否允许生成代码，生产环境设置为false
#generator:
#  enabled: true

#是否开启 swagger-ui
#swagger:
#  enabled: true

# IP 本地解析
ip:
  local-parsing: true

# 文件存储路径
file:
  mac:
    path: ~/file/
    avatar: ~/avatar/
  linux:
    path: /home/eladmin/file/
    avatar: /home/eladmin/avatar/
  windows:
    path: C:\eladmin\file\
    avatar: C:\eladmin\avatar\
  # 文件大小 /M
#  maxSize: 100
#  avatarMaxSize: 5

# oss配置
alibaba:
  cloud:
    access-key: xx
    secret-key: xx
    oss:
      endpoint: xxx
      # 自定义属性 bucketName
      bucket-name: xxx
      # 自定义属性 filePath
      file-path: xxx/xxx/
